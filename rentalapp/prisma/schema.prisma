// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id               String   @id @default(cuid())
  checkoutSessionId String?  // Monime Checkout Session ID
  status String?
  paidAt   DateTime @default(now())
  createdAt        DateTime @default(now())
  //people who made the order
  userId           String
  email            String
  name             String
  phone            String


  @@map("orders")
}

model Agent {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String?
  properties Property[]

  @@map("agents")
  
}
model Property {
  id          String   @id @default(cuid())
  title       String
  description String?
  price       Int
  propertyType String
  landSize    Int
  address     String
  city        String
  area        String
  bedrooms   Int
  bathrooms   Int
  imageUrl    String?
  imageUr2    String?
  isAvailable Boolean @default(true)
  postedAt   DateTime @default(now())
  agentId     String
  agent       Agent    @relation(fields: [agentId], references: [id])
  favourite   Favourite[]

  @@map("properties")
}

model Favourite {
  id         String   @id @default(cuid())
  userId     String   // Clerk user id
  propertyId String
  createdAt  DateTime @default(now())

  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@unique([userId, propertyId])   // one fav per user/property
}